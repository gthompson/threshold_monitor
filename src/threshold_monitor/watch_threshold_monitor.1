.TH\fBwatch_threshold_monitor.py\fP 1 "$Date$"
.SH NAME
watch_threshold_monitor.py \- watch output files generated by threshold monitor, update state matrix, and send alarms
.SH SYNOPSIS
.nf
\fBwatch_threshold_monitor.py \fP[-r \fIrefresh_interval\fP] [-i \fIiterations\fP] [-p \fIpfpath\fP]
                [-o \fIoutputdir\fP] [-v] 
.fi
.SH DESCRIPTION
\fBwatch_threshold_monitor.py\fP is a program that continuously watches the latency and threshold CSV files that are written by
\fBthreshold_monitor.py\fP. These CSV files contain one row per packet Trace. If all the files stop growing, it suggests \fBthreshold_monitor.py\fP
has crashed. If any one stops growing, it suggests a data outage for the corresponding station. The program attempts to read the last row
of each CSV file to determine the current latency (in seconds) and the current threshold state ("OFF", "LOW", "MEDIUM", or "HIGH") of that
station. A pandas DataFrame is built from these data, and then reflected in a MySQL table called OCC_DISPLAY.



.SH OPTIONS
.IP "-r refresh_interval"
How frequently to re-read the CSV files, in seconds. 
Something in the range of 1 to 10 seconds probably makes sense.
.IP "-i iterations"
The number of refresh iterations. The program will run for 
refresh_interval * iterations seconds. Useful only for testing. 
Default value runs forever. 
.IP "-o outputdir or --outputdir outputdir"
Path to a directly for all outputs. This includes PNG files for latency
alarms, and threshold exceedance alarms, as well as CSV files that log
latency information, and PGA data, for each packet. There is one CSV file
per station.
.IP "-p parameterfile"
Path to threshold_monitor parameter file. There is no parameter file for 
\fBwatch_threshold_monitor.py\fP, but some of the parameters used for 
\fBthreshold_monitor.py\fP are needed by \fBwatch_threshold_monitor.py\fP. See manpage
for \fBthreshold_monitor.py\fP for more details.
.IP "-v or --verbose"
Verbose output flag. Useful for debugging. Also gets turned on if mysql is not
installed, to provide screen output of the pandas DataFrame instead.

.SH CAVEATS

Because the CSV files currently grow without limit, \fBwatch_threshold_monitor.py\fP may eventually slow down. So some mechanism to trim the CSV files should
be added.

File locking is employed between \fBthreshold_monitor.py\fP, \fBdata_ingestion.py\fP, and\fBwatch_threshold_monitor.py\fP to ensure that incomplete rows are
not read, which could lead to unpredictable errors. 

There is a task in Sprint 11 to move alarming from \fBthreshold_monitor.py\fP and \fBdata_ingestion.py\fP into \fBwatch_threshold_monitor.py\fP, and switch it 
from email alarms to slack. Processing the last 3 rows of each threshold CSV file, as is done currently, will no longer suffice, and some new approach will be
needed, so as not to miss rows.

There is currently no parameter file for \fBwatch_threshold_monitor.py\fP, but once
alarming functionality is migrated from \fBthreshold_monitor.py\fP, it probably makes
sense to migrate the alarming parameters, such as threshold_alarm_timeout and
latency_alarm_timeout from threshold_monitor.yml to watch_threshold_monitor.yml.

.
.SH AUTHOR
Glenn Thompson, gthompson@alaska.edu

Luke Underwood

Nick Alexeev
.br
Alaska Earthquake Center
2024-08-24